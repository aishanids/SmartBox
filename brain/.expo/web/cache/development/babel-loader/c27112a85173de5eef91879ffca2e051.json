{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\gvsae\\\\Documents\\\\GitHub-Repos\\\\SmartBox\\\\brain\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useRef, useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.ShowHideTextComponentView = function () {\n      if (_this.state.status == true) {\n        _this.setState({\n          timerStatus: false\n        });\n      } else {\n        _this.setState({\n          timerStatus: true\n        });\n      }\n    };\n\n    _this.onStartPress = function () {\n      alert(\"Water Flow has begun\");\n    };\n\n    _this.onEndPress = function () {\n      alert(\"Water Flow has stopped\");\n    };\n\n    _this.timerStart = function (props) {\n      alert(\"Timer has started!\");\n    };\n\n    _this.state = {\n      buttonText: '#e6efbf',\n      inHours: 0,\n      inMins: 0,\n      inSecs: 0,\n      timerCount: 3\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.type === target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(KeyboardAvoidingView, {\n        behavior: Platform.OS == 'ios' ? 'padding' : 'height',\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: Keyboard.dismiss,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.inner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, \"Water Controls\"), React.createElement(Text, {\n        style: styles.subTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }, \"Water Flow\"), React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        title: \"Start\",\n        color: this.state.buttonText,\n        onPress: this.onStartPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        title: \"Stop\",\n        color: this.state.buttonText,\n        onPress: this.onEndPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }\n      }))), React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.subTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, \"Timer\")), React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"00\",\n        style: styles.textInput,\n        name: \"inHours\",\n        type: \"number\",\n        value: this.state.inHours,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.regText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, \"hrs\"), React.createElement(TextInput, {\n        placeholder: \"00\",\n        style: styles.textInput,\n        name: \"inMinutes\",\n        type: \"number\",\n        value: this.state.inMinutes,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.regText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, \"mins\"), React.createElement(TextInput, {\n        placeholder: \"00\",\n        style: styles.textInput,\n        name: \"inSecs\",\n        type: \"number\",\n        value: this.state.inSecs,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.regText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, \"secs\")), React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }\n      }, React.createElement(Button, {\n        title: \"Start\",\n        color: \"#e6efbf\",\n        onPress: this.timerStart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      })), React.createElement(StatusBar, {\n        style: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#e6efbf'\n  },\n  title: {\n    marginBottom: 5,\n    paddingVertical: 60,\n    backgroundColor: '#4ac3be',\n    color: '#e6efbf',\n    textAlign: 'left',\n    fontSize: 48,\n    fontWeight: 'normal'\n  },\n  subTitle: {\n    color: '#4ac3be',\n    fontSize: 36,\n    marginHorizontal: 5\n  },\n  button: {\n    backgroundColor: '#a3dec9',\n    width: 150,\n    borderRadius: 15,\n    marginBottom: 5\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff'\n  },\n  inner: {\n    flex: 1,\n    justifyContent: 'space-around'\n  },\n  textInput: {\n    height: 40,\n    width: 50,\n    fontSize: 35,\n    borderColor: '#000000',\n    borderWidth: 1,\n    marginBottom: 0\n  },\n  regText: {\n    color: '#4ac3be',\n    fontSize: 20,\n    marginHorizontal: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/gvsae/Documents/GitHub-Repos/SmartBox/brain/App.js"],"names":["StatusBar","React","useRef","useState","useEffect","App","props","ShowHideTextComponentView","state","status","setState","timerStatus","onStartPress","alert","onEndPress","timerStart","buttonText","inHours","inMins","inSecs","timerCount","handleInputChange","bind","event","target","value","type","name","Platform","OS","styles","container","Keyboard","dismiss","inner","title","subTitle","flexDirection","button","textInput","regText","inMinutes","Component","StyleSheet","create","flex","backgroundColor","marginBottom","paddingVertical","color","textAlign","fontSize","fontWeight","marginHorizontal","width","borderRadius","justifyContent","height","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport { Button, \r\n    Keyboard,\r\n    KeyboardAvoidingView, \r\n    Platform,\r\n    StyleSheet, \r\n    Text, \r\n    TouchableWithoutFeedback, \r\n    TouchableOpacity, \r\n    TextInput, \r\n    View } from 'react-native';\r\n\r\n/*function timerStart(){\r\n  const [timerCount, setTimer] = useState(60);\r\n  alert(\"Timer has started!\")\r\n      \r\n}*/\r\n\r\nexport default class App extends React.Component {\r\n  //const [text, setText] = useState('')\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      buttonText: '#e6efbf',\r\n      inHours: 0,\r\n      inMins: 0,\r\n      inSecs: 0,\r\n      timerCount: 3, //change after testing\r\n      //timerStatus: false\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n    \r\n  }\r\n  \r\n\r\n  /*componentDidMount(){\r\n    this.interval = setInterval(\r\n      () => this.setState((prevState)=> ({timer: prevState.timer -1})),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.timer === 1){\r\n      clearInterval(this.interval);\r\n      alert(\"Timer Done!\")\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.interval);\r\n  }*/\r\n\r\n  ShowHideTextComponentView = () =>{\r\n    if(this.state.status == true){\r\n      this.setState({timerStatus: false})\r\n    }\r\n    else{\r\n      this.setState({timerStatus: true})\r\n    }\r\n  }\r\n\r\n  handleInputChange(event){\r\n    const target = event.target;\r\n    const value = target.type === target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n  \r\n  onStartPress = () => {\r\n    //this.setState({ buttonText: '#faac64'})\r\n    alert(\"Water Flow has begun\")\r\n  }\r\n  onEndPress = () => {\r\n    //this.setState({ buttonT})\r\n    alert(\"Water Flow has stopped\")\r\n  }\r\n  timerStart = (props) =>{\r\n    //const [timerCount, setTimer] = useState(60)\r\n    alert(\"Timer has started!\")\r\n    \r\n  }\r\n  render(){   \r\n      return (\r\n        <KeyboardAvoidingView \r\n          behavior = {Platform.OS == 'ios' ? 'padding' : 'height'}\r\n          style={styles.container}>\r\n          \r\n          <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n            <View style={styles.inner}>\r\n              <Text style = {styles.title}>\r\n                Water Controls\r\n              </Text>\r\n              <Text style={styles.subTitle}>Water Flow</Text>\r\n              <View style={{ flexDirection:\"row\"}}>\r\n                <View style={styles.button}>\r\n                  <Button \r\n                    title = \"Start\"  \r\n                    color={this.state.buttonText} \r\n                    onPress={this.onStartPress}/>\r\n                </View>\r\n                <View style={styles.button}>\r\n                  <Button \r\n                    title  = \"Stop\" \r\n                    color={this.state.buttonText}\r\n                    onPress={this.onEndPress}/>\r\n                </View>\r\n              </View>\r\n              <View style={{flexDirection: \"row\"}}>\r\n                <Text style={styles.subTitle}>Timer</Text>\r\n                {/*<Text>{this.state.timer}</Text>*/}\r\n              </View>\r\n              \r\n              <View style={{ flexDirection: \"row\"}}>\r\n                <TextInput placeholder=\"00\" \r\n                  style={styles.textInput}  \r\n                  name = \"inHours\"\r\n                  type = \"number\"\r\n                  value={this.state.inHours}\r\n                  onChange={this.handleInputChange}/>\r\n                <Text style={styles.regText}>hrs</Text>\r\n                <TextInput placeholder=\"00\" \r\n                  style={styles.textInput} \r\n                  name = \"inMinutes\"\r\n                  type = \"number\"\r\n                  value={this.state.inMinutes}\r\n                  onChange={this.handleInputChange}/>\r\n                <Text style={styles.regText}>mins</Text>\r\n                <TextInput placeholder=\"00\" \r\n                  style={styles.textInput} \r\n                  name=\"inSecs\"\r\n                  type=\"number\"\r\n                  value={this.state.inSecs}\r\n                  onChange={this.handleInputChange}/>\r\n                <Text style={styles.regText}>secs</Text>\r\n              </View>\r\n              \r\n              <View style={styles.button}>\r\n                <Button title=\"Start\" color=\"#e6efbf\" onPress={this.timerStart} />\r\n              </View>\r\n            \r\n            \r\n              <StatusBar style=\"auto\" />\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n\r\n        </KeyboardAvoidingView>\r\n      );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#e6efbf',\r\n    //padding: 24,\r\n    //alignItems: 'center',\r\n    //justifyContent: 'center',\r\n  },\r\n  title: {\r\n    //marginTop: 16,\r\n    marginBottom: 5,\r\n    paddingVertical: 60,\r\n    //borderWidth: 4,\r\n    //borderColor: '#20232a',\r\n    backgroundColor: '#4ac3be',\r\n    color: '#e6efbf',\r\n    textAlign: 'left',\r\n    //position: 'absolute',\r\n    //width: 269,\r\n    //height: 54,\r\n    //left: 26,\r\n   // top: 108,\r\n    fontSize: 48, \r\n    fontWeight: 'normal',\r\n  },\r\n  subTitle: {\r\n    color: '#4ac3be',\r\n    fontSize: 36,\r\n    marginHorizontal: 5,\r\n    //marginBottom: 0.5,\r\n  },\r\n  button: {\r\n    backgroundColor: '#a3dec9',\r\n    //padding: 20,\r\n    width: 150,\r\n    borderRadius: 15,\r\n    marginBottom: 5,\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    color: '#fff',\r\n  },\r\n  inner: {\r\n    //padding: 10,\r\n    flex: 1,\r\n    justifyContent: 'space-around',\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    width: 50,\r\n    fontSize: 35,\r\n    borderColor: '#000000',\r\n    borderWidth: 1,\r\n    marginBottom: 0,\r\n  },\r\n  regText: {\r\n    color: '#4ac3be',\r\n    fontSize: 20,\r\n    marginHorizontal: 10\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}