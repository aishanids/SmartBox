{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\gvsae\\\\Documents\\\\GitHub-Repos\\\\SmartBox\\\\brain\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useRef, useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\n\nfunction timerStart(string) {\n  React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }, \"string\");\n}\n\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS == 'ios' ? 'padding' : 'height',\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Water Controls\"), React.createElement(Text, {\n    style: styles.subTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Water Flow\"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, React.createElement(Button, {\n    title: \"Start\",\n    color: \"#e6efbf\",\n    onPress: function onPress() {\n      return alert(\"Water Flow has begun\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, React.createElement(Button, {\n    title: \"Stop\",\n    color: \"#e6efbf\",\n    onPress: function onPress() {\n      return alert(\"Water Flow has ended\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.subTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"Timer\")), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"00:00:00\",\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    onSubmitEditing: function onSubmitEditing() {\n      return timerStart(text);\n    },\n    returnKeyType: 'done',\n    defaultValue: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }), React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, React.createElement(Button, {\n    title: \"Start\",\n    color: \"#e6efbf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }))), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#e6efbf'\n  },\n  title: {\n    marginBottom: 5,\n    paddingVertical: 60,\n    backgroundColor: '#4ac3be',\n    color: '#e6efbf',\n    textAlign: 'left',\n    fontSize: 48,\n    fontWeight: 'normal'\n  },\n  subTitle: {\n    color: '#4ac3be',\n    fontSize: 36,\n    marginHorizontal: 5\n  },\n  button: {\n    backgroundColor: '#a3dec9',\n    width: 150,\n    borderRadius: 15,\n    marginBottom: 0\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff'\n  },\n  inner: {\n    flex: 1,\n    justifyContent: 'space-around'\n  },\n  textInput: {\n    height: 40,\n    width: 150,\n    fontSize: 35,\n    borderColor: '#000000',\n    borderWidth: 1,\n    marginBottom: 0\n  },\n  regText: {\n    color: '#4ac3be',\n    fontSize: 20,\n    marginHorizontal: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/gvsae/Documents/GitHub-Repos/SmartBox/brain/App.js"],"names":["StatusBar","React","useRef","useState","useEffect","timerStart","string","App","text","setText","Platform","OS","styles","container","Keyboard","dismiss","inner","title","subTitle","flexDirection","button","alert","textInput","StyleSheet","create","flex","backgroundColor","marginBottom","paddingVertical","color","textAlign","fontSize","fontWeight","marginHorizontal","width","borderRadius","buttonText","justifyContent","height","borderColor","borderWidth","regText"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport { Button, \r\n    Keyboard,\r\n    KeyboardAvoidingView, \r\n    Platform,\r\n    StyleSheet, \r\n    Text, \r\n    TouchableWithoutFeedback, \r\n    TouchableOpacity, \r\n    TextInput, \r\n    View } from 'react-native';\r\n\r\n\r\nfunction timerStart(string){\r\n  //const hours = string.split(':');\r\n  //const minutes = string.split(':');\r\n  \r\n\r\n  //alert(string)\r\n  <Text>string</Text>\r\n  \r\n  \r\n}\r\n\r\nexport default function App(){\r\n  //const [text, setText] = useState('')\r\n  /*constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      buttonText: '#e6efbf',\r\n      inHours: 0,\r\n      inMins: 0,\r\n      inSecs: 0,\r\n      timer: 3, //change after testing\r\n      //timerStatus: false\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n    \r\n  }*/\r\n  \r\n\r\n  /*componentDidMount(){\r\n    this.fetchData();\r\n    this.interval = setInterval(\r\n      () => this.setState((prevState)=> ({timer: prevState.timer -1})),\r\n      1000\r\n    );\r\n  }\r\n\r\n  fetchData = async () => {\r\n    const a = await this.timerStart;\r\n  }\r\n  componentDidUpdate(){\r\n    if(this.state.timer === 1){\r\n      clearInterval(this.interval);\r\n      alert(\"Timer Done!\")\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  timerStart = (props) =>{\r\n    //const [timerCount, setTimer] = useState(60)\r\n    alert(\"Timer has started!\")\r\n    //return(3);\r\n    \r\n  }\r\n  ShowHideTextComponentView = () =>{\r\n    if(this.state.status == true){\r\n      this.setState({timerStatus: false})\r\n    }\r\n    else{\r\n      this.setState({timerStatus: true})\r\n    }\r\n  }\r\n\r\n  handleInputChange(event){\r\n    const target = event.target;\r\n    const value = target.type === target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n  \r\n  onStartPress = () => {\r\n    //this.setState({ buttonText: '#faac64'})\r\n    alert(\"Water Flow has begun\")\r\n  }\r\n  onEndPress = () => {\r\n    //this.setState({ buttonT})\r\n    alert(\"Water Flow has stopped\")\r\n  }*/\r\n   \r\n    const [text, setText] = useState('');\r\n    return (\r\n      <KeyboardAvoidingView \r\n        behavior = {Platform.OS == 'ios' ? 'padding' : 'height'}\r\n        style={styles.container}>\r\n          \r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n          <View style={styles.inner}>\r\n            <Text style = {styles.title}>\r\n              Water Controls\r\n            </Text>\r\n            <Text style={styles.subTitle}>Water Flow</Text>\r\n            <View style={{ flexDirection:\"row\"}}>\r\n              <View style={styles.button}>\r\n                <Button \r\n                  title = \"Start\"  \r\n                  color= \"#e6efbf\"\r\n                  onPress={() => alert(\"Water Flow has begun\")}/>\r\n              </View>\r\n              <View style={styles.button}>\r\n                <Button \r\n                  title  = \"Stop\" \r\n                  color=\"#e6efbf\"\r\n                  onPress={() => alert(\"Water Flow has ended\")}/>\r\n              </View>\r\n            </View>\r\n            <View style={{flexDirection: \"row\"}}>\r\n              <Text style={styles.subTitle}>Timer</Text>\r\n              {/*<Text>{this.state.timer}</Text>*/}\r\n              </View>\r\n              \r\n            <View style={{ flexDirection: \"row\"}}>\r\n              <TextInput \r\n                placeholder=\"00:00:00\" \r\n                style={styles.textInput}  \r\n                //name = \"inHours\"\r\n                //type = \"number\"\r\n                //value={this.state.inHours}\r\n                onChangeText={text => setText(text)}\r\n                onSubmitEditing={ () => timerStart(text)}\r\n                returnKeyType={'done'}\r\n                defaultValue = {text}\r\n              />\r\n              {/*<Text style={styles.regText}>hrs</Text>\r\n              <TextInput placeholder=\"00\" \r\n                style={styles.textInput} \r\n                //name = \"inMinutes\"\r\n                //type = \"number\"\r\n                //value={this.state.inMinutes}\r\n                //onChange={this.handleInputChange}\r\n                />\r\n              <Text style={styles.regText}>mins</Text>\r\n              <TextInput placeholder=\"00\" \r\n                style={styles.textInput} \r\n                //name=\"inSecs\"\r\n                //type=\"number\"\r\n                //value={this.state.inSecs}\r\n                //onChange={this.handleInputChange}\r\n                />\r\n              <Text style={styles.regText}>secs</Text>*/} \r\n              <View style={styles.button}>\r\n                <Button title=\"Start\" color=\"#e6efbf\" /*onPress={this.timerStart}*/ />\r\n              </View>\r\n            </View>\r\n              \r\n            \r\n            \r\n            \r\n            <StatusBar style=\"auto\" />\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n\r\n      </KeyboardAvoidingView>\r\n      );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#e6efbf',\r\n    //padding: 24,\r\n    //alignItems: 'center',\r\n    //justifyContent: 'center',\r\n  },\r\n  title: {\r\n    //marginTop: 16,\r\n    marginBottom: 5,\r\n    paddingVertical: 60,\r\n    //borderWidth: 4,\r\n    //borderColor: '#20232a',\r\n    backgroundColor: '#4ac3be',\r\n    color: '#e6efbf',\r\n    textAlign: 'left',\r\n    //position: 'absolute',\r\n    //width: 269,\r\n    //height: 54,\r\n    //left: 26,\r\n   // top: 108,\r\n    fontSize: 48, \r\n    fontWeight: 'normal',\r\n  },\r\n  subTitle: {\r\n    color: '#4ac3be',\r\n    fontSize: 36,\r\n    marginHorizontal: 5,\r\n    //marginBottom: 0.5,\r\n  },\r\n  button: {\r\n    backgroundColor: '#a3dec9',\r\n    //padding: 20,\r\n    width: 150,\r\n    borderRadius: 15,\r\n    marginBottom: 0,\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    color: '#fff',\r\n  },\r\n  inner: {\r\n    //padding: 10,\r\n    flex: 1,\r\n    justifyContent: 'space-around',\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    width: 150,\r\n    fontSize: 35,\r\n    borderColor: '#000000',\r\n    borderWidth: 1,\r\n    marginBottom: 0,\r\n  },\r\n  regText: {\r\n    color: '#4ac3be',\r\n    fontSize: 20,\r\n    marginHorizontal: 10\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}